name: derper
base: core24
version: 1.78.3
license: BSD-3-Clause
grade: stable
confinement: strict
contact: solutions-engineering@lists.canonical.com
issues: https://github.com/canonical/derper-snap/issues
source-code: https://github.com/canonical/derper-snap
summary: DERP Server for Tailscale
description: |
  Derper is a self hosted DERP (Designated Encrypted Relay for Packets) server, designed to be used with Tailscale.
  This snap provides a simple and secure way to run your own DERP servers to route your tailscale traffic through your own relay servers.

  Please refer to the upstream documentation at https://tailscale.com/kb/1118/custom-derp-servers and https://tailscale.com/kb/1232/derp-servers for more information.

  **Usage**

  Install the snap:

     sudo snap install derper

  This installs the DERP server and starts it automatically.
  You will likely need to configure the service:

  **Configuration**

  You can modify configuration options with `sudo snap set`. The following configuration options are currently supported:

  * `hostname`: LetsEncrypt host name, if addr's (`a`) port is :443. (default if unset: "derp.tailscale.com")
  * `a`: server HTTP/HTTPS listen address, in form ":port", "ip:port", or for IPv6 "[ip]:port". If the IP is omitted, it defaults to all interfaces. Serves HTTPS if the port is 443 and/or certmode is manual (default certmode is "letsencrypt"), otherwise HTTP. (default if unset: ":443")
  * `stun-port`: The UDP port on which to serve STUN. The listener is bound to the same IP (if any) as specified in the `a` option. (default if unset: "3478")

  The config options correspond to the similarly named command line flags for `derper`.

  Options that don't have support to be configured through the snap will be left on their default.
  See the `derper` command source code at https://github.com/tailscale/tailscale/tree/main/cmd/derper for more technical information on options.

  Example of setting an option:

     sudo snap set derper hostname=myderper.mydomain.com

  To view the available config options and their current values:

     $ sudo snap get derper
     Key             Value
     hostname
     a               127.0.0.1:443
     ...

  Derper must be restarted manually for the changed config to take affect:

     sudo snap restart derper

  **Security**

  Derper provides a way to negotiate direct connections between devices running tailscale,
  or acting as a full relay server if no direct connection is possible.
  Derper never sees the content of traffic it relays, as all data is end to end encrypted already by Tailscale using Wireguard on the end devices.
  Please see the upstream documentation for more security information about derper.

  The snap is strictly confined, with interfaces limited to:

  * `network`: general network access.
  * `network-bind`: required for the service to listen on an interface.

  This snap has some thin wrapper logic around derper
  The snap logic does not use any cryptographic functionality directly;
  it simply provides a managed way to configure the derper service, by providing some scripts and interacting with `snapctl`.

  On first run, derper generates a secret key and writes it to file at `$SNAP_COMMON/derper.key`. This file is only readable or writeable by the root user.
  Note that derper refers to this file as the config file.

platforms:
  amd64:
  arm64:

apps:
  derper:
    command: bin/derper-service
    daemon: simple
    plugs:
      - network
      - network-bind

parts:
  derper:
    source: https://github.com/tailscale/tailscale.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION
    plugin: go
    build-snaps:
      - go
    override-build: |
      go install -p $CRAFT_PARALLEL_BUILD_COUNT ./cmd/derper
  scripts:
    plugin: dump
    source: snap/local
    organize:
      derper-service: bin/derper-service
